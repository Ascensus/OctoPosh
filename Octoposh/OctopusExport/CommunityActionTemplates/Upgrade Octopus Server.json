{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-170",
  "Name": "Upgrade Octopus Server",
  "ExternalId": "4b3a1f09-1827-41bb-88a4-894c6317922b",
  "Description": "This step downloads the latest version of Octopus Server and upgrades an existing instance. Run this step on a tentacle that has privileges to install software and start/stop services on the target server.\n\n**Run this after a database backup step**\n\nTo Use:\n- Install a tentacle on the Octopus Server machine with privileges to install software and start/stop services\n- Add that tentacle to an environment and with a unique role\n- Setup a project for the upgrade process\n- Add a database backup step for your Octopus Server database\n- Add this step, selecting it to run on just the role previously configured\n- Create a release\n- Deploy that release whenever an upgrade is needed\n\nNB: The deployment will show as \"Timed Out\" when the server comes back online",
  "Version": 7,
  "ActionType": "Octopus.Script",
  "Author": "droyad",
  "Website": "https://library.octopus.com/step-templates/4b3a1f09-1827-41bb-88a4-894c6317922b",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/upgrade-octopus-server.json",
  "Category": "Octopus",
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n$versions = Invoke-WebRequest https://octopusdeploy.com/download/upgrade/v3 -UseBasicParsing | ConvertFrom-Json\n$version = $versions[-1].Version\n$tempFile = [System.IO.Path]::GetTempFileName()\n\nWrite-Host \"Downloading Octopus $version\"\ntry\n{\n    (New-Object System.Net.WebClient).DownloadFile(\"https://download.octopusdeploy.com/octopus/Octopus.$version-x64.msi\", $tempFile)\n}\ncatch\n{\n    echo $_.Exception|format-list -force\n}\n\nWrite-Host \"Stopping Server\"\n. 'C:\\Program Files\\Octopus Deploy\\Octopus\\Octopus.Server.exe' service --stop --console --instance $InstanceName\n\nWrite-Host \"Installing\"\nmsiexec /i $tempFile /quiet | Out-Null\n\nWrite-Host \"Deleting installer\"\nRemove-Item $tempFile\n\nWrite-Host \"Starting Server\"\n. 'C:\\Program Files\\Octopus Deploy\\Octopus\\Octopus.Server.exe' service --start --console --instance $InstanceName\n\n"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "InstanceName",
      "Label": "Instance Name",
      "HelpText": "The name of your octopus instance. For the default instance use `OctopusServer`.",
      "DefaultValue": "OctopusServer",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-170",
  "LogoAttachmentMimeType": "image/png"
}