{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-151",
  "Name": "SQL - Execute Script",
  "ExternalId": "73f89638-51d1-4fbb-b68f-b71ba9e86720",
  "Description": "Execute a SQL script",
  "Version": 3,
  "ActionType": "Octopus.Script",
  "Author": "ekrapfl",
  "Website": "https://library.octopus.com/step-templates/73f89638-51d1-4fbb-b68f-b71ba9e86720",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/sql-execute-script.json",
  "Category": "SQL Server",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "$connection = New-Object System.Data.SqlClient.SqlConnection\r$connection.ConnectionString = $OctopusParameters['ConnectionString']\r$continueOnError = $($ContinueOnError.ToLower() -eq 'true')\rRegister-ObjectEvent -inputobject $connection -eventname InfoMessage -action {\r    write-host $event.SourceEventArgs\r} | Out-Null\r\rfunction Execute-SqlQuery($query) {\r    $queries = [System.Text.RegularExpressions.Regex]::Split($query, \"^\\s*GO\\s*`$\", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase -bor [System.Text.RegularExpressions.RegexOptions]::Multiline)\r\r    $queries | ForEach-Object {\r        $q = $_\r        if ((-not [String]::IsNullOrWhiteSpace($q)) -and ($q.Trim().ToLowerInvariant() -ne \"go\")) {            \r            $command = $connection.CreateCommand()\r            $command.CommandText = $q\r            $command.CommandTimeout = $OctopusParameters['CommandTimeout']\r            $command.ExecuteNonQuery() | Out-Null\r        }\r    }\r\r}\r\rWrite-Host \"Connecting\"\rtry {\r    $connection.Open()\r\r    Write-Host \"Executing script\"\r    Execute-SqlQuery -query $OctopusParameters['SqlScript']\r}\rcatch {\r\tif ($continueOnError) {\r\t\tWrite-Host $_.Exception.Message\r\t}\r\telse {\r\t\tthrow\r\t}\r}\rfinally {\r    Write-Host \"Closing connection\"\r    $connection.Dispose()\r}",
    "Octopus.Action.Script.Syntax": "PowerShell"
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "ConnectionString",
      "Label": "Connection string",
      "HelpText": "Connection string for the SQL connection. Example:\n\n    Server=.\\SQLExpress;Database=OctoFX;Integrated Security=True;\n\nBind to a variable to provide different values for different environments.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": null,
      "Name": "SqlScript",
      "Label": "SQL Script",
      "HelpText": "Script to run. Can be bound to a variable split over multiple lines. Text output by the PRINT statement in SQL will be logged to the deployment log. Use 'GO' to separate multiple commands\n\nExample:\n\n    USE MASTER\n    go\n\n    BACKUP DATABASE [OctoFX] TO DISK = N'#{FilePath}' WITH  COPY_ONLY, NOFORMAT, NOINIT,  NAME = N'Backup created by Octopus', SKIP, NOREWIND, NOUNLOAD,  STATS = 10",
      "DefaultValue": "PRINT 'Hello from SQL'",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": null,
      "Name": "ContinueOnError",
      "Label": "Continue On Error",
      "HelpText": "If set to true, an error with the SQL statement will simply write to the log and not cause an error in the deployment.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "CommandTimeout",
      "Label": "Command Timeout",
      "HelpText": "The SQL Command Timeout. By default is 30 seconds.",
      "DefaultValue": "30",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-151",
  "LogoAttachmentMimeType": "image/png"
}